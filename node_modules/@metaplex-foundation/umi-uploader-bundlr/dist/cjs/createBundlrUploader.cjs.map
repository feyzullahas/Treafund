{"version":3,"file":"createBundlrUploader.cjs","sources":["../../src/createBundlrUploader.ts"],"sourcesContent":["// eslint-disable-next-line import/no-named-default\nimport type { default as NodeBundlr, WebBundlr } from '@bundlr-network/client';\nimport {\n  Commitment,\n  Context,\n  GenericFile,\n  GenericFileTag,\n  Keypair,\n  Signer,\n  SolAmount,\n  UploaderInterface,\n  base58,\n  createGenericFileFromJson,\n  createSignerFromKeypair,\n  isKeypairSigner,\n  lamports,\n  publicKey,\n  signTransaction,\n} from '@metaplex-foundation/umi';\nimport {\n  fromWeb3JsKeypair,\n  fromWeb3JsLegacyTransaction,\n  toWeb3JsLegacyTransaction,\n  toWeb3JsPublicKey,\n} from '@metaplex-foundation/umi-web3js-adapters';\nimport {\n  Connection as Web3JsConnection,\n  Keypair as Web3JsKeypair,\n  PublicKey as Web3JsPublicKey,\n  SendOptions as Web3JsSendOptions,\n  Signer as Web3JsSigner,\n  Transaction as Web3JsTransaction,\n  TransactionSignature as Web3JsTransactionSignature,\n} from '@solana/web3.js';\nimport BigNumber from 'bignumber.js';\nimport { Buffer } from 'buffer';\nimport {\n  AssetUploadFailedError,\n  BundlrWithdrawError,\n  FailedToConnectToBundlrAddressError,\n  FailedToInitializeBundlrError,\n} from './errors';\n\n/**\n * This method is necessary to import the Bundlr package on both ESM and CJS modules.\n * Without this, we get a different structure on each module:\n * - CJS: { default: [Getter], WebBundlr: [Getter] }\n * - ESM: { default: { default: [Getter], WebBundlr: [Getter] } }\n * This method fixes this by ensure there is not double default in the imported package.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _removeDoubleDefault(pkg: any) {\n  if (\n    pkg &&\n    typeof pkg === 'object' &&\n    'default' in pkg &&\n    'default' in pkg.default\n  ) {\n    return pkg.default;\n  }\n\n  return pkg;\n}\n\nexport type BundlrUploader = UploaderInterface & {\n  bundlr: () => Promise<NodeBundlr | WebBundlr>;\n  getUploadPriceFromBytes: (bytes: number) => Promise<SolAmount>;\n  getBalance: () => Promise<SolAmount>;\n  fund: (amount: SolAmount, skipBalanceCheck: boolean) => Promise<void>;\n  withdrawAll: (amount: SolAmount) => Promise<void>;\n  withdraw: (amount: SolAmount) => Promise<void>;\n};\n\nexport type BundlrUploaderOptions = {\n  address?: string;\n  timeout?: number;\n  providerUrl?: string;\n  priceMultiplier?: number;\n  payer?: Signer;\n};\n\nexport type BundlrWalletAdapter = {\n  publicKey: Web3JsPublicKey | null;\n  signMessage?: (message: Uint8Array) => Promise<Uint8Array>;\n  signTransaction?: (\n    transaction: Web3JsTransaction\n  ) => Promise<Web3JsTransaction>;\n  signAllTransactions?: (\n    transactions: Web3JsTransaction[]\n  ) => Promise<Web3JsTransaction[]>;\n  sendTransaction: (\n    transaction: Web3JsTransaction,\n    connection: Web3JsConnection,\n    options?: Web3JsSendOptions & { signers?: Web3JsSigner[] }\n  ) => Promise<Web3JsTransactionSignature>;\n};\n\n// Size of Bundlr transaction header.\nconst HEADER_SIZE = 2_000;\n\n// Minimum file size for cost calculation.\nconst MINIMUM_SIZE = 80_000;\n\nexport function createBundlrUploader(\n  context: Pick<Context, 'rpc' | 'payer' | 'eddsa'>,\n  options: BundlrUploaderOptions = {}\n): BundlrUploader {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  let _bundlr: WebBundlr | NodeBundlr | null = null;\n  options = {\n    providerUrl: context.rpc.getEndpoint(),\n    ...options,\n  };\n\n  const getUploadPriceFromBytes = async (bytes: number): Promise<SolAmount> => {\n    const bundlr = await getBundlr();\n    const price = await bundlr.getPrice(bytes);\n\n    return bigNumberToAmount(\n      price.multipliedBy(options.priceMultiplier ?? 1.1)\n    );\n  };\n\n  const getUploadPrice = async (files: GenericFile[]): Promise<SolAmount> => {\n    const bytes: number = files.reduce(\n      (sum, file) =>\n        sum + HEADER_SIZE + Math.max(MINIMUM_SIZE, file.buffer.byteLength),\n      0\n    );\n\n    return getUploadPriceFromBytes(bytes);\n  };\n\n  const upload = async (files: GenericFile[]): Promise<string[]> => {\n    const bundlr = await getBundlr();\n    const amount = await getUploadPrice(files);\n    await fund(amount);\n\n    const promises = files.map(async (file) => {\n      const buffer = Buffer.from(file.buffer);\n      const { status, data } = await bundlr.uploader.upload(buffer, {\n        tags: getGenericFileTagsWithContentType(file),\n      });\n\n      if (status >= 300) {\n        throw new AssetUploadFailedError(status);\n      }\n\n      return `https://arweave.net/${data.id}`;\n    });\n\n    return Promise.all(promises);\n  };\n\n  const uploadJson = async <T>(json: T): Promise<string> => {\n    const file = createGenericFileFromJson(json);\n    const uris = await upload([file]);\n    return uris[0];\n  };\n\n  const getBalance = async (): Promise<SolAmount> => {\n    const bundlr = await getBundlr();\n    const balance = await bundlr.getLoadedBalance();\n\n    return bigNumberToAmount(balance);\n  };\n\n  const fund = async (\n    amount: SolAmount,\n    skipBalanceCheck = false\n  ): Promise<void> => {\n    const bundlr = await getBundlr();\n    let toFund = amountToBigNumber(amount);\n\n    if (!skipBalanceCheck) {\n      const balance = await bundlr.getLoadedBalance();\n\n      toFund = toFund.isGreaterThan(balance)\n        ? toFund.minus(balance)\n        : new BigNumber(0);\n    }\n\n    if (toFund.isLessThanOrEqualTo(0)) {\n      return;\n    }\n\n    await bundlr.fund(toFund);\n  };\n\n  const withdrawAll = async (): Promise<void> => {\n    // TODO(loris): Replace with \"withdrawAll\" when available on Bundlr.\n    const bundlr = await getBundlr();\n    const balance = await bundlr.getLoadedBalance();\n    const minimumBalance = new BigNumber(5000);\n\n    if (balance.isLessThan(minimumBalance)) {\n      return;\n    }\n\n    const balanceToWithdraw = balance.minus(minimumBalance);\n    await withdraw(bigNumberToAmount(balanceToWithdraw));\n  };\n\n  const withdraw = async (amount: SolAmount): Promise<void> => {\n    const bundlr = await getBundlr();\n\n    const { status } = await bundlr.withdrawBalance(amountToBigNumber(amount));\n\n    if (status >= 300) {\n      throw new BundlrWithdrawError(status);\n    }\n  };\n\n  const getBundlr = async (): Promise<WebBundlr | NodeBundlr> => {\n    const oldPayer = _bundlr?.getSigner().publicKey;\n    const newPayer = options.payer ?? context.payer;\n    if (\n      oldPayer &&\n      publicKey(new Uint8Array(oldPayer)) !== newPayer.publicKey\n    ) {\n      _bundlr = null;\n    }\n\n    if (!_bundlr) {\n      _bundlr = await initBundlr();\n    }\n\n    return _bundlr;\n  };\n\n  const initBundlr = async (): Promise<WebBundlr | NodeBundlr> => {\n    const currency = 'solana';\n    const defaultAddress =\n      context.rpc.getCluster() === 'devnet'\n        ? 'https://devnet.bundlr.network'\n        : 'https://node1.bundlr.network';\n    const address = options?.address ?? defaultAddress;\n    const bundlrOptions = {\n      timeout: options.timeout,\n      providerUrl: options.providerUrl,\n    };\n\n    const payer: Signer = options.payer ?? context.payer;\n\n    // If in node use node bundlr, else use web bundlr.\n    const isNode =\n      // eslint-disable-next-line no-prototype-builtins\n      typeof window === 'undefined' || window.process?.hasOwnProperty('type');\n\n    let bundlr;\n    if (isNode && isKeypairSigner(payer))\n      bundlr = await initNodeBundlr(address, currency, payer, bundlrOptions);\n    else {\n      bundlr = await initWebBundlr(address, currency, payer, bundlrOptions);\n    }\n\n    try {\n      // Check for valid bundlr node.\n      await bundlr.utils.getBundlerAddress(currency);\n    } catch (error) {\n      throw new FailedToConnectToBundlrAddressError(address, error as Error);\n    }\n\n    return bundlr;\n  };\n\n  const initNodeBundlr = async (\n    address: string,\n    currency: string,\n    keypair: Keypair,\n    options: any\n  ): Promise<NodeBundlr> => {\n    const bPackage = _removeDoubleDefault(\n      await import('@bundlr-network/client')\n    );\n    // eslint-disable-next-line new-cap\n    return new bPackage.default(address, currency, keypair.secretKey, options);\n  };\n\n  const initWebBundlr = async (\n    address: string,\n    currency: string,\n    payer: Signer,\n    options: any\n  ): Promise<WebBundlr> => {\n    const wallet: BundlrWalletAdapter = {\n      publicKey: toWeb3JsPublicKey(payer.publicKey),\n      signMessage: (message: Uint8Array) => payer.signMessage(message),\n      signTransaction: async (web3JsTransaction: Web3JsTransaction) =>\n        toWeb3JsLegacyTransaction(\n          await payer.signTransaction(\n            fromWeb3JsLegacyTransaction(web3JsTransaction)\n          )\n        ),\n      signAllTransactions: async (web3JsTransactions: Web3JsTransaction[]) => {\n        const transactions = web3JsTransactions.map(\n          fromWeb3JsLegacyTransaction\n        );\n        const signedTransactions = await payer.signAllTransactions(\n          transactions\n        );\n        return signedTransactions.map(toWeb3JsLegacyTransaction);\n      },\n      sendTransaction: async (\n        web3JsTransaction: Web3JsTransaction,\n        connection: Web3JsConnection,\n        options: Web3JsSendOptions & { signers?: Web3JsSigner[] } = {}\n      ): Promise<Web3JsTransactionSignature> => {\n        const { signers: web3JsSigners = [], ...sendOptions } = options;\n        const signers = web3JsSigners.map((web3JsSigner) =>\n          createSignerFromKeypair(\n            context,\n            fromWeb3JsKeypair(\n              Web3JsKeypair.fromSecretKey(web3JsSigner.secretKey)\n            )\n          )\n        );\n\n        let transaction = fromWeb3JsLegacyTransaction(web3JsTransaction);\n        transaction = await signTransaction(transaction, [payer, ...signers]);\n\n        const signature = await context.rpc.sendTransaction(transaction, {\n          ...sendOptions,\n          preflightCommitment: sendOptions.preflightCommitment as Commitment,\n        });\n\n        return base58.deserialize(signature)[0];\n      },\n    };\n\n    const bPackage = _removeDoubleDefault(\n      await import('@bundlr-network/client')\n    );\n    const bundlr = new bPackage.WebBundlr(address, currency, wallet, options);\n\n    try {\n      // Try to initiate bundlr.\n      await bundlr.ready();\n    } catch (error) {\n      throw new FailedToInitializeBundlrError(error as Error);\n    }\n\n    return bundlr;\n  };\n\n  return {\n    getUploadPriceFromBytes,\n    getUploadPrice,\n    upload,\n    uploadJson,\n    getBalance,\n    fund,\n    withdrawAll,\n    withdraw,\n    bundlr: getBundlr,\n  };\n}\n\nexport const isBundlrUploader = (\n  uploader: UploaderInterface\n): uploader is BundlrUploader =>\n  'bundlr' in uploader &&\n  'getBalance' in uploader &&\n  'fund' in uploader &&\n  'withdrawAll' in uploader;\n\nconst bigNumberToAmount = (bigNumber: BigNumber): SolAmount =>\n  lamports(bigNumber.decimalPlaces(0).toString());\n\nconst amountToBigNumber = (amount: SolAmount): BigNumber =>\n  new BigNumber(amount.basisPoints.toString());\n\nconst getGenericFileTagsWithContentType = (\n  file: GenericFile\n): GenericFileTag[] => {\n  if (!file.contentType) {\n    return file.tags;\n  }\n\n  return [{ name: 'Content-Type', value: file.contentType }, ...file.tags];\n};\n"],"names":["_removeDoubleDefault","pkg","default","HEADER_SIZE","MINIMUM_SIZE","createBundlrUploader","context","options","_bundlr","providerUrl","rpc","getEndpoint","getUploadPriceFromBytes","bytes","bundlr","getBundlr","price","getPrice","bigNumberToAmount","multipliedBy","priceMultiplier","getUploadPrice","files","reduce","sum","file","Math","max","buffer","byteLength","upload","amount","fund","promises","map","Buffer","from","status","data","uploader","tags","getGenericFileTagsWithContentType","AssetUploadFailedError","id","Promise","all","uploadJson","json","createGenericFileFromJson","uris","getBalance","balance","getLoadedBalance","skipBalanceCheck","toFund","amountToBigNumber","isGreaterThan","minus","BigNumber","isLessThanOrEqualTo","withdrawAll","minimumBalance","isLessThan","balanceToWithdraw","withdraw","withdrawBalance","BundlrWithdrawError","oldPayer","getSigner","publicKey","newPayer","payer","Uint8Array","initBundlr","currency","defaultAddress","getCluster","address","bundlrOptions","timeout","isNode","window","process","hasOwnProperty","isKeypairSigner","initNodeBundlr","initWebBundlr","utils","getBundlerAddress","error","FailedToConnectToBundlrAddressError","keypair","bPackage","secretKey","wallet","toWeb3JsPublicKey","signMessage","message","signTransaction","web3JsTransaction","toWeb3JsLegacyTransaction","fromWeb3JsLegacyTransaction","signAllTransactions","web3JsTransactions","transactions","signedTransactions","sendTransaction","connection","signers","web3JsSigners","sendOptions","web3JsSigner","createSignerFromKeypair","fromWeb3JsKeypair","Web3JsKeypair","fromSecretKey","transaction","signature","preflightCommitment","base58","deserialize","WebBundlr","ready","FailedToInitializeBundlrError","isBundlrUploader","bigNumber","lamports","decimalPlaces","toString","basisPoints","contentType","name","value"],"mappings":"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"}